{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "deploymentContext": { "type": "object" },
    "virtualMachinesSetting": {
      "type": "object",
      "metadata": {
        "description": "Settings for virtual machines."
      }
    }
  },
  "variables": {
    "templateUniqueString": "[uniqueString(concat(string(parameters('deploymentContext')), string(parameters('virtualMachinesSetting'))))]",
    "location": "[resourceGroup().location]",
    "collectorTemplate": "[uri(deployment().properties.templateLink.uri, '../../common/collector.json')]",
    "extensionsTemplate": "[uri(deployment().properties.templateLink.uri, 'extensions/virtualMachine-extensions.json')]",
    "nicsDeployment": "[concat(parameters('deploymentContext').parentTemplateUniqueString, '-deployNics-', variables('templateUniqueString'))]",
    "extensionsDeployment": "[concat(parameters('deploymentContext').parentTemplateUniqueString, '-deployExts-', variables('templateUniqueString'))]",
    "diagnosticsExtensionTemplate": "[uri(deployment().properties.templateLink.uri, concat('single-vm-n-nic-diagnostics-extension-', parameters('virtualMachinesSetting').osType, '.json'))]",
    "diagnosticsExtensionDeployment": "[concat(parameters('deploymentContext').parentTemplateUniqueString, '-deployDiag-', variables('templateUniqueString'))]"
  },
  "resources": [
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2015-01-01",
      "name": "[variables('nicsDeployment')]",
      "properties": {
        "mode": "Incremental",
        "templateLink": { "uri": "[variables('collectorTemplate')]" },
        "parameters": {
          "deploymentContext": {
            "value": {
              "parentTemplateUniqueString": "[concat(variables('templateUniqueString'), '-deployNics')]"
            }
          },
          "source": { "value": "[parameters('virtualMachinesSetting').nics]" },
          "context": { "value": { } },
          "mapperTemplateUri": { "value": "[uri(deployment().properties.templateLink.uri, 'virtualMachine-nic.json')]" }
        }
      }
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2015-01-01",
      "name": "[variables('diagnosticsExtensionDeployment')]",
      "dependsOn": [
        "[concat('Microsoft.Compute/virtualMachines/', parameters('virtualMachinesSetting').vmName)]"
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": { "uri": "[variables('diagnosticsExtensionTemplate')]" },
        "parameters": {
          "deploymentContext": {
            "value": {
              "parentTemplateUniqueString": "[concat(variables('templateUniqueString'), '-deployDiag')]"
            }
          },
          "source": { "value": "[parameters('virtualMachinesSetting')]" },
          "context": {
            "value": {
            }
          }
        }
      }
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2015-01-01",
      "name": "[variables('extensionsDeployment')]",
      "dependsOn": [
        "[variables('diagnosticsExtensionDeployment')]"
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": { "uri": "[variables('extensionsTemplate')]" },
        "parameters": {
          "deploymentContext": {
            "value": {
              "parentTemplateUniqueString": "[concat(variables('templateUniqueString'), '-deployExts')]"
            }
          },
          "source": { "value": "[parameters('virtualMachinesSetting').extensions]" },
          "context": {
            "value": {
              "virtualMachinesSetting": "[parameters('virtualMachinesSetting')]",
              "vmName": "[parameters('virtualMachinesSetting').vmName]"
            }
          }
        }
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Compute/virtualMachines",
      "name": "[parameters('virtualMachinesSetting').vmName]",
      "location": "[variables('location')]",
      "tags": { "displayName": "VM" },
      "dependsOn": [
        "[concat('Microsoft.Resources/deployments/', variables('nicsDeployment'))]"
      ],
      "properties": {
        "availabilitySet": { "id": "[resourceId('Microsoft.Compute/availabilitySets', parameters('virtualMachinesSetting').availabilitySetName)]" },
        "hardwareProfile": { "vmSize": "[parameters('virtualMachinesSetting').size]" },
        "osProfile": {
          "computerName": "[parameters('virtualMachinesSetting').computerName]",
          "adminUsername": "[parameters('virtualMachinesSetting').adminUsername]",
          "adminPassword": "[parameters('virtualMachinesSetting').adminPassword]",
          "[concat(toLower(parameters('virtualMachinesSetting').osType), 'Configuration')]": "[parameters('virtualMachinesSetting')[concat(toLower(parameters('virtualMachinesSetting').osType), 'Configuration')]]"
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "[parameters('virtualMachinesSetting').imageReference.publisher]",
            "offer": "[parameters('virtualMachinesSetting').imageReference.offer]",
            "sku": "[parameters('virtualMachinesSetting').imageReference.sku]",
            "version": "[parameters('virtualMachinesSetting').imageReference.version]"
          },
          "osDisk": {
            "name": "[parameters('virtualMachinesSetting').osDisk.name]",
            "vhd": { "uri": "[parameters('virtualMachinesSetting').osDisk.vhd.uri]" },
            "caching": "[parameters('virtualMachinesSetting').osDisk.caching]",
            "createOption": "[parameters('virtualMachinesSetting').osDisk.createOption]"
          },
          "dataDisks": "[parameters('virtualMachinesSetting').dataDisks]"
        },
        "networkProfile": {
          "networkInterfaces": "[reference(concat('Microsoft.Resources/deployments/', variables('nicsDeployment'))).outputs.result.value]"
        },

        "diagnosticsProfile": {
          "bootDiagnostics": {
            "enabled": "true",
            "storageUri": "[parameters('virtualMachinesSetting').diagnosticsStorageUri]"
          }
        }
      }
    }
  ]
}